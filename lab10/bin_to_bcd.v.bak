module bin_to_bcd (
    input wire [7:0] bin,           // Input binary (hex) value
    output reg [3:0] hundreds,      // BCD hundreds
    output reg [3:0] tens,          // BCD tens
    output reg [3:0] ones           // BCD ones
);
    integer i;
    reg [19:0] shift_reg;

    always @(*) begin
        // Khởi tạo shift register: 20 bits [hundreds][tens][ones][bin]
        shift_reg = 20'd0;
        shift_reg[7:0] = bin;

        // Double Dabble: lặp 8 lần (vì input 8-bit)
        for (i = 0; i < 8; i = i + 1) begin
            // Nếu bất kỳ BCD digit nào >= 5 thì cộng 3
            if (shift_reg[11:8] >= 5)
                shift_reg[11:8] = shift_reg[11:8] + 3;
            if (shift_reg[15:12] >= 5)
                shift_reg[15:12] = shift_reg[15:12] + 3;
            if (shift_reg[19:16] >= 5)
                shift_reg[19:16] = shift_reg[19:16] + 3;

            // Dịch trái 1 bit
            shift_reg = shift_reg << 1;
        end

        // Gán kết quả BCD
        hundreds = shift_reg[19:16];
        tens     = shift_reg[15:12];
        ones     = shift_reg[11:8];
    end
endmodule
